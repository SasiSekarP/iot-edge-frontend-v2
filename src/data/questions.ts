export const questions: Question[] = [
	{
		uuid: "q1",
		title: "What is React.js and why is it used?",
		answerType: "DESCRIPTIVE",
		options: [],
		note: "React.js is a JavaScript library for building user interfaces, particularly single-page applications. It's used for creating reusable UI components and provides a fast rendering performance using the virtual DOM.",
		score: "10",
	},
	{
		uuid: "q2",
		title: "Which of the following are features of React.js?",
		answerType: "MCQ",
		options: [
			{ uuid: "o1", title: "Virtual DOM", score: "2", isCorrect: true },
			{ uuid: "o2", title: "Two-way data binding", score: "0", isCorrect: false },
			{ uuid: "o3", title: "Component-based architecture", score: "2", isCorrect: true },
			{ uuid: "o4", title: "Template-based rendering", score: "0", isCorrect: false },
		],
		note: "",
		score: "4",
	},
	{
		uuid: "q3",
		title: "Which of the following is the correct way to create a component in React?",
		answerType: "SCQ",
		options: [
			{ uuid: "o1", title: "function MyComponent() {}", score: "5", isCorrect: true },
			{ uuid: "o2", title: "component MyComponent() {}", score: "0", isCorrect: false },
			{ uuid: "o3", title: "class MyComponent[]", score: "0", isCorrect: false },
			{ uuid: "o4", title: "<MyComponent> function() </MyComponent>", score: "0", isCorrect: false },
		],
		note: "",
		score: "5",
	},
	{
		uuid: "q4",
		title: "Describe the concept of state in React.",
		answerType: "DESCRIPTIVE",
		options: [],
		note: "State in React is a built-in object that stores property values that belong to a component. When the state object changes, the component re-renders. It's used to manage dynamic data and control the component's behavior.",
		score: "10",
	},
	{
		uuid: "q5",
		title: "Select the lifecycle methods available in class components.",
		answerType: "MCQ",
		options: [
			{ uuid: "o1", title: "componentDidMount", score: "2", isCorrect: true },
			{ uuid: "o2", title: "useEffect", score: "0", isCorrect: false },
			{ uuid: "o3", title: "componentWillUnmount", score: "2", isCorrect: true },
			{ uuid: "o4", title: "renderComponent", score: "0", isCorrect: false },
		],
		note: "",
		score: "4",
	},
	{
		uuid: "q6",
		title: "Which hook is used for managing state in a functional component?",
		answerType: "SCQ",
		options: [
			{ uuid: "o1", title: "useState", score: "5", isCorrect: true },
			{ uuid: "o2", title: "useEffect", score: "0", isCorrect: false },
			{ uuid: "o3", title: "useReducer", score: "0", isCorrect: false },
			{ uuid: "o4", title: "useMemo", score: "0", isCorrect: false },
		],
		note: "",
		score: "5",
	},
	{
		uuid: "q7",
		title: "Explain how the useEffect hook works and give an example.",
		answerType: "DESCRIPTIVE",
		options: [],
		note: "The useEffect hook lets you perform side effects in function components. It runs after the render and can be used for tasks like data fetching, subscriptions, or manually changing the DOM. Example: useEffect(() => { fetchData(); }, []);",
		score: "10",
	},
	{
		uuid: "q8",
		title: "Choose the correct statements about JSX and describe its role in React.",
		answerType: "MCQ_DESCRIPTIVE",
		options: [
			{ uuid: "o1", title: "JSX is a syntax extension for JavaScript.", score: "2", isCorrect: true },
			{ uuid: "o2", title: "JSX allows mixing HTML with JavaScript.", score: "2", isCorrect: true },
			{ uuid: "o3", title: "JSX files must have a .jsx extension.", score: "0", isCorrect: false },
			{ uuid: "o4", title: "JSX doesn't need to be transpiled.", score: "0", isCorrect: false },
		],
		note: "JSX allows us to write HTML-like syntax inside JavaScript. It makes the structure of UI components more readable and maintainable. Babel transpiles JSX into React.createElement calls.",
		score: "4",
	},
	{
		uuid: "q9",
		title: "Which statement best describes React's reconciliation process? Also, provide a brief explanation.",
		answerType: "SCQ_DESCRIPTIVE",
		options: [
			{ uuid: "o1", title: "React re-renders the entire DOM tree on every update.", score: "0", isCorrect: false },
			{ uuid: "o2", title: "React updates only changed elements using Virtual DOM.", score: "5", isCorrect: true },
			{ uuid: "o3", title: "React directly modifies the DOM without checks.", score: "0", isCorrect: false },
			{ uuid: "o4", title: "React requires manual DOM diffing by developers.", score: "0", isCorrect: false },
		],
		note: "React's reconciliation process compares the new virtual DOM with the previous one and updates only the parts that changed. This ensures efficient updates and improved performance.",
		score: "5",
	},
	{
		uuid: "q10",
		title: "Describe the difference between controlled and uncontrolled components in React.",
		answerType: "DESCRIPTIVE",
		options: [],
		note: "Controlled components have their form data managed by React via state. Uncontrolled components store their data in the DOM. Controlled components provide more control over form inputs and validation.",
		score: "10",
	},
];
